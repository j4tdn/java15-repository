1: Đóng gói: Encapsulation

	Được thể hiện qua các access modified. Nếu:
		- Private: đóng gói trong phạm vi class
		- Protected, default(no define) ==> phạm vi package
			==> Thừa kế: Khi lớp cha có phương thức, thuộc tính mang access modifier là
			+ Proteced: class con (trong cùng package hoặc ngoài package) đều kế thừa được
			+ default: lớp con (trong cùng package) mới có thể kế thừa được
		- Public: sử dụng mọi nơi

2. Đa hình - Polymorphism
+ Phương thức:
	. Overloading:
		Hai hay nhiều phương thức được gọi là overloading khi
		- Thuộc cùng 1 class
		- Cùng tên hàm
			+ Khác số lượng tham số
			+ Khác KDL truyền vào của tham số
		
	. Overriding:
		- Hàm thuộc lớp cha
		- Kế thừa định nghĩa (override)
		- Kế thừa cả thuộc tính và phương thức nhưng chỉ override được phương thức
		Tại sao không khai báo trực tiếp KDL lúc compile và runtime giống nhau
		 * - Áp dụng factory pattern
		 * - Dễ dàng chuyển đổi kiểu dữ liệu qua về
		 * - Tạo tập hợp các phần tử KDL cha, con đưa vào 1 mảng chung duy nhất
		 * - Convention
		 * 
		 * 2. Nếu lấy KDL của lớp con new KDL của lớp cha được không
		 * - Cha = con -> OK
		 * - Con = cha -> NO
		 * 
		 * 3. Lấy KDL lúc compile và runtime không có quan hệ được không
		 * - Không
		 * Design pattern: factory pattern